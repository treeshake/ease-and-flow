buildscript {
    repositories {
        maven {
            url 'https://mxsix.jfrog.io/artifactory/default-maven-local'
            credentials {
                username = project.hasProperty('artifactory_user') ? artifactory_user : System.getenv('ARTIFACTORY_USER')
                password = project.hasProperty('artifactory_password') ? artifactory_password : System.getenv('ARTIFACTORY_PASSWORD')
            }
        }
        mavenCentral()
    }
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'groovy'
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

allprojects {
    apply plugin: 'com.jfrog.artifactory'
}

group 'io.mxsix'
version = '0.1.1'

artifactory {
    contextUrl = 'https://mxsix.jfrog.io/artifactory'
    publish {
        repository {
            repoKey = 'default-maven-local'
            username = project.hasProperty('artifactory_user') ? artifactory_user : System.getenv('ARTIFACTORY_USER')
            password = project.hasProperty('artifactory_password') ? artifactory_password : System.getenv('ARTIFACTORY_PASSWORD')
            maven = true
        }
        defaults {
            publications('mavenJava')
        }
        publishArtifacts = true
    }
    resolve {
        repository {
            repoKey = 'default-maven-local'
            username = project.hasProperty('artifactory_user') ? artifactory_user : System.getenv('ARTIFACTORY_USER')
            password = project.hasProperty('artifactory_password') ? artifactory_password : System.getenv('ARTIFACTORY_PASSWORD')
            maven = true
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}
ext {
    springBootVersion = "2.6.6"
    springCloudVersion = "3.1.0"
    lombokVersion = "1.18.22"
    junitVersion = "5.8.1"
    mockitoVersion = "3.5.11"
    commonsIoVersion = "2.11.0"
    postgresJdbcVersion = "42.3.4"
    liquibaseCoreVersion = "4.9.1"
    jacksonVersion = "2.13.1"
    commonsLang3Version = "3.12.0"
    commonsCollections4Version = "4.4"
    h2Version = "1.3.148"
}

test {
    useJUnitPlatform()
}

dependencies {
    /** SpringBoot Dependencies **/
    compileOnly "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"

    /** Postgres JDBC **/
    implementation "org.postgresql:postgresql:${postgresJdbcVersion}"

    /** Liquibase **/
    implementation "org.liquibase:liquibase-core:${liquibaseCoreVersion}"

    /** Lombok **/
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    /** Jackson **/
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"

    /** Apache Commons **/
    implementation "commons-io:commons-io:${commonsIoVersion}"
    implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
    implementation "org.apache.commons:commons-collections4:${commonsCollections4Version}"

    /** Test Dependencies **/
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "com.h2database:h2:${h2Version}"
}
